'use strict';function cov_hbo5uy7y6(){var path="/home/luca/skole/2 SEMESTER/dev_env/exam/models/user.js";var hash="04d67fa021ce72839536a5835d133d35599fa978";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/luca/skole/2 SEMESTER/dev_env/exam/models/user.js",statementMap:{"0":{start:{line:2,column:18},end:{line:2,column:38}},"1":{start:{line:4,column:0},end:{line:31,column:2}},"2":{start:{line:16,column:2},end:{line:29,column:5}},"3":{start:{line:30,column:2},end:{line:30,column:14}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:4,column:17},end:{line:4,column:18}},loc:{start:{line:4,column:43},end:{line:31,column:1}},line:4},"1":{name:"(anonymous_1)",decl:{start:{line:11,column:4},end:{line:11,column:5}},loc:{start:{line:11,column:29},end:{line:13,column:5}},line:11}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0},f:{"0":0,"1":0},b:{},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"04d67fa021ce72839536a5835d133d35599fa978"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_hbo5uy7y6=function(){return actualCoverage;};}return actualCoverage;}cov_hbo5uy7y6();const{Model}=(cov_hbo5uy7y6().s[0]++,require('sequelize'));cov_hbo5uy7y6().s[1]++;module.exports=(sequelize,DataTypes)=>{cov_hbo5uy7y6().f[0]++;class User extends Model{/**
     * Helper method for defining associations.
     * This method is not a part of Sequelize lifecycle.
     * The `models/index` file will call this method automatically.
     */static associate(models){// define association here
cov_hbo5uy7y6().f[1]++;}};cov_hbo5uy7y6().s[2]++;User.init({id:{type:DataTypes.INTEGER,primaryKey:true},name:DataTypes.STRING},{timestamps:false,createdAt:false,updatedAt:false,deletedAt:false,sequelize,modelName:'User'});cov_hbo5uy7y6().s[3]++;return User;};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXIuanMiXSwibmFtZXMiOlsiTW9kZWwiLCJyZXF1aXJlIiwibW9kdWxlIiwiZXhwb3J0cyIsInNlcXVlbGl6ZSIsIkRhdGFUeXBlcyIsIlVzZXIiLCJhc3NvY2lhdGUiLCJtb2RlbHMiLCJpbml0IiwiaWQiLCJ0eXBlIiwiSU5URUdFUiIsInByaW1hcnlLZXkiLCJuYW1lIiwiU1RSSU5HIiwidGltZXN0YW1wcyIsImNyZWF0ZWRBdCIsInVwZGF0ZWRBdCIsImRlbGV0ZWRBdCIsIm1vZGVsTmFtZSJdLCJtYXBwaW5ncyI6IkFBQUEsYSxxbkNBZVk7eUZBZFosS0FBTSxDQUFFQSxLQUFGLDBCQUFZQyxPQUFPLENBQUMsV0FBRCxDQUFuQixDQUFOLEMsdUJBRUFDLE1BQU0sQ0FBQ0MsT0FBUCxDQUFpQixDQUFDQyxTQUFELENBQVlDLFNBQVosR0FBMEIsd0JBQ3pDLEtBQU1DLENBQUFBLElBQU4sUUFBbUJOLENBQUFBLEtBQU0sQ0FDdkI7QUFDSjtBQUNBO0FBQ0E7QUFDQSxPQUNvQixNQUFUTyxDQUFBQSxTQUFTLENBQUNDLE1BQUQsQ0FBUyxDQUN2QjtBQUR1Qix1QkFFeEIsQ0FSc0IsQ0FTeEIsQ0FWd0MsdUJBWXpDRixJQUFJLENBQUNHLElBQUwsQ0FBVSxDQUNUQyxFQUFFLENBQUUsQ0FDSEMsSUFBSSxDQUFFTixTQUFTLENBQUNPLE9BRGIsQ0FFSEMsVUFBVSxDQUFFLElBRlQsQ0FESyxDQUtUQyxJQUFJLENBQUVULFNBQVMsQ0FBQ1UsTUFMUCxDQUFWLENBTUcsQ0FDSkMsVUFBVSxDQUFFLEtBRFIsQ0FFR0MsU0FBUyxDQUFFLEtBRmQsQ0FHR0MsU0FBUyxDQUFFLEtBSGQsQ0FJR0MsU0FBUyxDQUFFLEtBSmQsQ0FLQWYsU0FMQSxDQU1BZ0IsU0FBUyxDQUFFLE1BTlgsQ0FOSCxFQVp5Qyx1QkEwQnpDLE1BQU9kLENBQUFBLElBQVAsQ0FDRCxDQTNCRCIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcbmNvbnN0IHsgTW9kZWwgfSA9IHJlcXVpcmUoJ3NlcXVlbGl6ZScpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IChzZXF1ZWxpemUsIERhdGFUeXBlcykgPT4ge1xuICBjbGFzcyBVc2VyIGV4dGVuZHMgTW9kZWwge1xuICAgIC8qKlxuICAgICAqIEhlbHBlciBtZXRob2QgZm9yIGRlZmluaW5nIGFzc29jaWF0aW9ucy5cbiAgICAgKiBUaGlzIG1ldGhvZCBpcyBub3QgYSBwYXJ0IG9mIFNlcXVlbGl6ZSBsaWZlY3ljbGUuXG4gICAgICogVGhlIGBtb2RlbHMvaW5kZXhgIGZpbGUgd2lsbCBjYWxsIHRoaXMgbWV0aG9kIGF1dG9tYXRpY2FsbHkuXG4gICAgICovXG4gICAgc3RhdGljIGFzc29jaWF0ZShtb2RlbHMpIHtcbiAgICAgIC8vIGRlZmluZSBhc3NvY2lhdGlvbiBoZXJlXG4gICAgfVxuICB9O1xuXG4gIFVzZXIuaW5pdCh7XG5cdCAgaWQ6IHtcblx0XHQgIHR5cGU6IERhdGFUeXBlcy5JTlRFR0VSLFxuXHRcdCAgcHJpbWFyeUtleTogdHJ1ZVxuXHQgIH0sXG5cdCAgbmFtZTogRGF0YVR5cGVzLlNUUklOR1xuICB9LCB7XG5cdHRpbWVzdGFtcHM6IGZhbHNlLFxuICAgICAgICBjcmVhdGVkQXQ6IGZhbHNlLFxuICAgICAgICB1cGRhdGVkQXQ6IGZhbHNlLFxuICAgICAgICBkZWxldGVkQXQ6IGZhbHNlLFxuICAgIFx0c2VxdWVsaXplLFxuICAgIFx0bW9kZWxOYW1lOiAnVXNlcicsXG4gIH0pO1xuICByZXR1cm4gVXNlcjtcbn07XG4iXX0=